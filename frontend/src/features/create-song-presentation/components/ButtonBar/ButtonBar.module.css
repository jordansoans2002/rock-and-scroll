.buttonBar {
  display: flex; /* Align buttons horizontally */
  align-items: center; /* Vertically center buttons */
  gap: 0.5rem;
}

.verticalButtonBar {
  flex-direction: column;
  height: 100%;
  padding-block: 0.5rem;
}

.horizontalButtonBar {
  flex-direction: row;
  width: 100%;
  padding-inline: 0.5rem;
}

.group {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

/* START group: take available space in horizontal mode so end group sits at right */
.startGroupHorizontal {
  flex: 1 1 auto;
  justify-content: flex-start;
}

/* If you want start group stacked vertically, make it column via an extra prop/class */
.startGroupVertical {
  flex: 1 1 auto;
  justify-content: flex-start;
  flex-direction: column;
  align-items: stretch;
}

/* END group: natural size; for horizontal it's right-aligned because startGroup expands.
   For vertical, we'll push it to the bottom using margin-top:auto. */
.endGroup {
  flex: 0 0 auto;
}

/* vertical-specific behavior: push endGroup to bottom */
.vertical .endGroup {
  margin-top: auto;
}

.button {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  cursor: pointer;
}

.verticalButton {
  writing-mode: vertical-rl;   /* text flows vertically */
  text-orientation: mixed;     /* keeps letters upright */
  height: auto;
  min-height: 3rem;            /* ensure enough space */
}

.icon {
  display: inline-flex;
  font-size: 1rem;
  line-height: 1;
}

.label {
  white-space: nowrap;
}

/* Without padding - buttons would be too small to click comfortably */
/* Without transition - hover effects would be jarring */
/* Without border: 1px solid transparent - hover border would cause layout shift */

.button:focus-visible {
  outline: 2px solid #3b82f6; /* Blue outline for keyboard navigation */
  outline-offset: 2px; /* Space between button and outline */
}
/* Without focus-visible - keyboard users wouldn't see which button is focused */

.button:disabled {
  opacity: 0.5; /* Fade out disabled buttons */
  cursor: not-allowed; /* Show not-allowed cursor */
}
/* Without opacity - disabled state wouldn't be visible */
/* Without cursor change - users wouldn't know button is disabled */

.button:active:not(:disabled) {
  transform: translateY(1px); /* Subtle press effect */
}
/* Without this - no tactile feedback on click */
